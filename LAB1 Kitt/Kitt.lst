;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 22/03/2021 19:03:11
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EFBA  	GOTO        372
_interrupt:
;Kitt.c,25 :: 		void interrupt(){ // ISR
0x0008	0xF015C000  	MOVFF       R0, 21
;Kitt.c,26 :: 		if(INTCON.RBIF){ //Se la flag di interrupt su porta b è alta
0x000C	0xA0F2      	BTFSS       INTCON, 0 
0x000E	0xD01F      	BRA         L_interrupt8
;Kitt.c,27 :: 		if(PORTB.RB7){ //se l'interrupt è su RB7
0x0010	0xAE81      	BTFSS       PORTB, 7 
0x0012	0xD00E      	BRA         L_interrupt9
;Kitt.c,28 :: 		if(delayLED<5000){
0x0014	0x0E80      	MOVLW       128
0x0016	0x1817      	XORWF       _delayLED+1, 0 
0x0018	0x6E00      	MOVWF       R0 
0x001A	0x0E80      	MOVLW       128
0x001C	0x0A13      	XORLW       19
0x001E	0x5C00      	SUBWF       R0, 0 
0x0020	0xE102      	BNZ         L__interrupt16
0x0022	0x0E88      	MOVLW       136
0x0024	0x5C16      	SUBWF       _delayLED, 0 
L__interrupt16:
0x0026	0xE204      	BC          L_interrupt10
;Kitt.c,29 :: 		delayLED += 50;
0x0028	0x0E32      	MOVLW       50
0x002A	0x2616      	ADDWF       _delayLED, 1 
0x002C	0x0E00      	MOVLW       0
0x002E	0x2217      	ADDWFC      _delayLED+1, 1 
;Kitt.c,30 :: 		}
L_interrupt10:
;Kitt.c,31 :: 		}
L_interrupt9:
;Kitt.c,32 :: 		if(PORTB.RB6){
0x0030	0xAC81      	BTFSS       PORTB, 6 
0x0032	0xD00D      	BRA         L_interrupt11
;Kitt.c,33 :: 		if(delayLED>50){
0x0034	0x0E80      	MOVLW       128
0x0036	0x6E00      	MOVWF       R0 
0x0038	0x0E80      	MOVLW       128
0x003A	0x1817      	XORWF       _delayLED+1, 0 
0x003C	0x5C00      	SUBWF       R0, 0 
0x003E	0xE102      	BNZ         L__interrupt17
0x0040	0x5016      	MOVF        _delayLED, 0 
0x0042	0x0832      	SUBLW       50
L__interrupt17:
0x0044	0xE204      	BC          L_interrupt12
;Kitt.c,34 :: 		delayLED -= 50;
0x0046	0x0E32      	MOVLW       50
0x0048	0x5E16      	SUBWF       _delayLED, 1 
0x004A	0x0E00      	MOVLW       0
0x004C	0x5A17      	SUBWFB      _delayLED+1, 1 
;Kitt.c,35 :: 		}
L_interrupt12:
;Kitt.c,36 :: 		}
L_interrupt11:
;Kitt.c,37 :: 		}
L_interrupt8:
;Kitt.c,38 :: 		INTCON.RBIF = 0; //pulisco l'interrupt flag
0x004E	0x90F2      	BCF         INTCON, 0 
;Kitt.c,39 :: 		}
L_end_interrupt:
L__interrupt15:
0x0050	0xF000C015  	MOVFF       21, R0
0x0054	0x0011      	RETFIE      1
; end of _interrupt
_Mul_32x32_U:
;__Lib_Math.c,1616 :: 		
;__Lib_Math.c,1631 :: 		
0x0056	0x0E22      	MOVLW       34
;__Lib_Math.c,1632 :: 		
0x0058	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,1633 :: 		
0x005A	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,1634 :: 		
0x005C	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,1635 :: 		
0x005E	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,1636 :: 		
0x0060	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,1638 :: 		
_NEXT:
;__Lib_Math.c,1642 :: 		
0x0062	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1643 :: 		
0x0064	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1644 :: 		
0x0066	0xD01F      	BRA         _EXIT2
;__Lib_Math.c,1645 :: 		
0x0068	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,1647 :: 		
_LOOP:
;__Lib_Math.c,1656 :: 		
0x006A	0x320B      	RRCF        R11, 1, 0
;__Lib_Math.c,1657 :: 		
0x006C	0x320A      	RRCF        R10, 1, 0
;__Lib_Math.c,1658 :: 		
0x006E	0x3209      	RRCF        R9, 1, 0
;__Lib_Math.c,1659 :: 		
0x0070	0x3208      	RRCF        R8, 1, 0
;__Lib_Math.c,1660 :: 		
0x0072	0x3203      	RRCF        R3, 1, 0
;__Lib_Math.c,1661 :: 		
0x0074	0x3202      	RRCF        R2, 1, 0
;__Lib_Math.c,1662 :: 		
0x0076	0x3201      	RRCF        R1, 1, 0
;__Lib_Math.c,1663 :: 		
0x0078	0x3200      	RRCF        R0, 1, 0
;__Lib_Math.c,1668 :: 		
0x007A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,1669 :: 		
0x007C	0xD7F2      	BRA         _NEXT
;__Lib_Math.c,1670 :: 		
0x007E	0x060C      	DECF        R12, 1, 0
;__Lib_Math.c,1671 :: 		
0x0080	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,1672 :: 		
0x0082	0xD009      	BRA         _EXIT1
;__Lib_Math.c,1679 :: 		
0x0084	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1680 :: 		
0x0086	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1681 :: 		
0x0088	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1684 :: 		
0x008A	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1685 :: 		
0x008C	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1688 :: 		
0x008E	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1689 :: 		
0x0090	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1692 :: 		
0x0092	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1694 :: 		
0x0094	0xD7EA      	BRA         _LOOP
;__Lib_Math.c,1696 :: 		
_EXIT1:
;__Lib_Math.c,1701 :: 		
0x0096	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,1702 :: 		
0x0098	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,1703 :: 		
0x009A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,1706 :: 		
0x009C	0x2209      	ADDWFC      R9, 1, 0
;__Lib_Math.c,1707 :: 		
0x009E	0x5006      	MOVF        R6, 0, 0
;__Lib_Math.c,1710 :: 		
0x00A0	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,1711 :: 		
0x00A2	0x5007      	MOVF        R7, 0, 0
;__Lib_Math.c,1714 :: 		
0x00A4	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,1717 :: 		
_EXIT2:
;__Lib_Math.c,1719 :: 		
L_end_Mul_32x32_U:
0x00A6	0x0012      	RETURN      0
; end of _Mul_32x32_U
_VDelay_ms:
;__Lib_Delays.c,123 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,126 :: 		NumberOfCyc = Clock_kHz()>>2;
0x00A8	0x0ED0      	MOVLW       208
0x00AA	0x6E1B      	MOVWF       VDelay_ms_NumberOfCyc_L0 
0x00AC	0x0E07      	MOVLW       7
0x00AE	0x6E1C      	MOVWF       VDelay_ms_NumberOfCyc_L0+1 
0x00B0	0x0E00      	MOVLW       0
0x00B2	0x6E1D      	MOVWF       VDelay_ms_NumberOfCyc_L0+2 
0x00B4	0x6E1E      	MOVWF       VDelay_ms_NumberOfCyc_L0+3 
;__Lib_Delays.c,127 :: 		NumberOfCyc *= Time_ms;
0x00B6	0x0ED0      	MOVLW       208
0x00B8	0x6E00      	MOVWF       R0 
0x00BA	0x0E07      	MOVLW       7
0x00BC	0x6E01      	MOVWF       R1 
0x00BE	0x0E00      	MOVLW       0
0x00C0	0x6E02      	MOVWF       R2 
0x00C2	0x0E00      	MOVLW       0
0x00C4	0x6E03      	MOVWF       R3 
0x00C6	0xF004C019  	MOVFF       FARG_VDelay_ms_Time_ms, R4
0x00CA	0xF005C01A  	MOVFF       FARG_VDelay_ms_Time_ms+1, R5
0x00CE	0x0E00      	MOVLW       0
0x00D0	0x6E06      	MOVWF       R6 
0x00D2	0x6E07      	MOVWF       R7 
0x00D4	0xDFC0      	RCALL       _Mul_32x32_U
0x00D6	0xF01BC000  	MOVFF       R0, VDelay_ms_NumberOfCyc_L0
0x00DA	0xF01CC001  	MOVFF       R1, VDelay_ms_NumberOfCyc_L0+1
0x00DE	0xF01DC002  	MOVFF       R2, VDelay_ms_NumberOfCyc_L0+2
0x00E2	0xF01EC003  	MOVFF       R3, VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,128 :: 		if (NumberOfCyc < 660)
0x00E6	0x0E00      	MOVLW       0
0x00E8	0x5C03      	SUBWF       R3, 0 
0x00EA	0xE108      	BNZ         L__VDelay_ms54
0x00EC	0x0E00      	MOVLW       0
0x00EE	0x5C02      	SUBWF       R2, 0 
0x00F0	0xE105      	BNZ         L__VDelay_ms54
0x00F2	0x0E02      	MOVLW       2
0x00F4	0x5C01      	SUBWF       R1, 0 
0x00F6	0xE102      	BNZ         L__VDelay_ms54
0x00F8	0x0E94      	MOVLW       148
0x00FA	0x5C00      	SUBWF       R0, 0 
L__VDelay_ms54:
0x00FC	0xE201      	BC          L_VDelay_ms23
;__Lib_Delays.c,129 :: 		return;
0x00FE	0xD031      	BRA         L_end_VDelay_ms
L_VDelay_ms23:
;__Lib_Delays.c,130 :: 		NumberOfCyc -= 660;
0x0100	0x0E94      	MOVLW       148
0x0102	0x5E1B      	SUBWF       VDelay_ms_NumberOfCyc_L0, 1 
0x0104	0x0E02      	MOVLW       2
0x0106	0x5A1C      	SUBWFB      VDelay_ms_NumberOfCyc_L0+1, 1 
0x0108	0x0E00      	MOVLW       0
0x010A	0x5A1D      	SUBWFB      VDelay_ms_NumberOfCyc_L0+2, 1 
0x010C	0x5A1E      	SUBWFB      VDelay_ms_NumberOfCyc_L0+3, 1 
;__Lib_Delays.c,131 :: 		NumberOfCyc >>=  5;
0x010E	0x0E05      	MOVLW       5
0x0110	0x6E00      	MOVWF       R0 
0x0112	0x5000      	MOVF        R0, 0 
L__VDelay_ms55:
0x0114	0xE007      	BZ          L__VDelay_ms56
0x0116	0x321E      	RRCF        VDelay_ms_NumberOfCyc_L0+3, 1 
0x0118	0x321D      	RRCF        VDelay_ms_NumberOfCyc_L0+2, 1 
0x011A	0x321C      	RRCF        VDelay_ms_NumberOfCyc_L0+1, 1 
0x011C	0x321B      	RRCF        VDelay_ms_NumberOfCyc_L0, 1 
0x011E	0x9E1E      	BCF         VDelay_ms_NumberOfCyc_L0+3, 7 
0x0120	0x0FFF      	ADDLW       255
0x0122	0xD7F8      	BRA         L__VDelay_ms55
L__VDelay_ms56:
;__Lib_Delays.c,133 :: 		while (NumberOfCyc--)
L_VDelay_ms24:
0x0124	0xF000C01B  	MOVFF       VDelay_ms_NumberOfCyc_L0, R0
0x0128	0xF001C01C  	MOVFF       VDelay_ms_NumberOfCyc_L0+1, R1
0x012C	0xF002C01D  	MOVFF       VDelay_ms_NumberOfCyc_L0+2, R2
0x0130	0xF003C01E  	MOVFF       VDelay_ms_NumberOfCyc_L0+3, R3
0x0134	0x0E01      	MOVLW       1
0x0136	0x5E1B      	SUBWF       VDelay_ms_NumberOfCyc_L0, 1 
0x0138	0x0E00      	MOVLW       0
0x013A	0x5A1C      	SUBWFB      VDelay_ms_NumberOfCyc_L0+1, 1 
0x013C	0x5A1D      	SUBWFB      VDelay_ms_NumberOfCyc_L0+2, 1 
0x013E	0x5A1E      	SUBWFB      VDelay_ms_NumberOfCyc_L0+3, 1 
0x0140	0x5000      	MOVF        R0, 0 
0x0142	0x1001      	IORWF       R1, 0 
0x0144	0x1002      	IORWF       R2, 0 
0x0146	0x1003      	IORWF       R3, 0 
0x0148	0xE00C      	BZ          L_VDelay_ms25
;__Lib_Delays.c,135 :: 		asm nop;
0x014A	0x0000      	NOP
;__Lib_Delays.c,136 :: 		asm nop;
0x014C	0x0000      	NOP
;__Lib_Delays.c,137 :: 		asm nop;
0x014E	0x0000      	NOP
;__Lib_Delays.c,138 :: 		asm nop;
0x0150	0x0000      	NOP
;__Lib_Delays.c,139 :: 		asm nop;
0x0152	0x0000      	NOP
;__Lib_Delays.c,140 :: 		asm nop;
0x0154	0x0000      	NOP
;__Lib_Delays.c,141 :: 		asm nop;
0x0156	0x0000      	NOP
;__Lib_Delays.c,142 :: 		asm nop;
0x0158	0x0000      	NOP
;__Lib_Delays.c,143 :: 		asm nop;
0x015A	0x0000      	NOP
;__Lib_Delays.c,144 :: 		asm nop;
0x015C	0x0000      	NOP
;__Lib_Delays.c,145 :: 		asm nop;
0x015E	0x0000      	NOP
;__Lib_Delays.c,146 :: 		}
0x0160	0xD7E1      	BRA         L_VDelay_ms24
L_VDelay_ms25:
;__Lib_Delays.c,147 :: 		}
L_end_VDelay_ms:
0x0162	0x0012      	RETURN      0
; end of _VDelay_ms
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0164	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0166	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x016A	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x016C	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x016E	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0170	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0172	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0174	0x0EF4      	MOVLW       244
0x0176	0x6E16      	MOVWF       _delayLED 
0x0178	0x0E01      	MOVLW       1
0x017A	0x6E17      	MOVWF       23 
;Kitt.c,2 :: 		void main() {
;Kitt.c,3 :: 		short int i = 0; //usato in while 1
0x017C	0x6A18      	CLRF        main_i_L0 
;Kitt.c,4 :: 		TRISB.RB6 = 1; //RB6 input
0x017E	0x8C93      	BSF         TRISB, 6 
;Kitt.c,5 :: 		TRISB.RB7 = 1; //RB7 input
0x0180	0x8E93      	BSF         TRISB, 7 
;Kitt.c,6 :: 		ANSELB.RB6 = 0; //RB6 digital input
0x0182	0x010F      	MOVLB       15
0x0184	0x9D39      	BCF         ANSELB, 6, 1
;Kitt.c,7 :: 		ANSELB.RB7 = 0; //RB7 digital inpunt
0x0186	0x9F39      	BCF         ANSELB, 7, 1
;Kitt.c,8 :: 		INTCON = 0b10001000; //interrupt conf
0x0188	0x0E88      	MOVLW       136
0x018A	0x6EF2      	MOVWF       INTCON 
;Kitt.c,9 :: 		TRISC = 0b00000000; //all port as output
0x018C	0x6A94      	CLRF        TRISC 
;Kitt.c,10 :: 		LATC = 0b00000001; //RC0 high
0x018E	0x0E01      	MOVLW       1
0x0190	0x6E8B      	MOVWF       LATC 
;Kitt.c,11 :: 		VDelay_ms(delayLED);
0x0192	0xF019C016  	MOVFF       _delayLED, FARG_VDelay_ms_Time_ms
0x0196	0xF01AC017  	MOVFF       _delayLED+1, FARG_VDelay_ms_Time_ms+1
0x019A	0xDF86      	RCALL       _VDelay_ms
;Kitt.c,13 :: 		while(1){
L_main0:
;Kitt.c,14 :: 		for(i=1; i<=7; i++){
0x019C	0x0E01      	MOVLW       1
0x019E	0x6E18      	MOVWF       main_i_L0 
L_main2:
0x01A0	0x0E80      	MOVLW       128
0x01A2	0x0A07      	XORLW       7
0x01A4	0x6E00      	MOVWF       R0 
0x01A6	0x0E80      	MOVLW       128
0x01A8	0x1818      	XORWF       main_i_L0, 0 
0x01AA	0x5C00      	SUBWF       R0, 0 
0x01AC	0xE30D      	BNC         L_main3
;Kitt.c,15 :: 		LATC = LATC<<1;
0x01AE	0xF000CF8B  	MOVFF       LATC, R0
0x01B2	0x3600      	RLCF        R0, 1 
0x01B4	0x9000      	BCF         R0, 0 
0x01B6	0xFF8BC000  	MOVFF       R0, LATC
;Kitt.c,16 :: 		VDelay_ms(delayLED);
0x01BA	0xF019C016  	MOVFF       _delayLED, FARG_VDelay_ms_Time_ms
0x01BE	0xF01AC017  	MOVFF       _delayLED+1, FARG_VDelay_ms_Time_ms+1
0x01C2	0xDF72      	RCALL       _VDelay_ms
;Kitt.c,14 :: 		for(i=1; i<=7; i++){
0x01C4	0x2A18      	INCF        main_i_L0, 1 
;Kitt.c,17 :: 		}
0x01C6	0xD7EC      	BRA         L_main2
L_main3:
;Kitt.c,18 :: 		for(i=7; i>0; i--){
0x01C8	0x0E07      	MOVLW       7
0x01CA	0x6E18      	MOVWF       main_i_L0 
L_main5:
0x01CC	0x0E80      	MOVLW       128
0x01CE	0x0A00      	XORLW       0
0x01D0	0x6E00      	MOVWF       R0 
0x01D2	0x0E80      	MOVLW       128
0x01D4	0x1818      	XORWF       main_i_L0, 0 
0x01D6	0x5C00      	SUBWF       R0, 0 
0x01D8	0xE20D      	BC          L_main6
;Kitt.c,19 :: 		LATC = LATC>>1;
0x01DA	0xF000CF8B  	MOVFF       LATC, R0
0x01DE	0x3200      	RRCF        R0, 1 
0x01E0	0x9E00      	BCF         R0, 7 
0x01E2	0xFF8BC000  	MOVFF       R0, LATC
;Kitt.c,20 :: 		VDelay_ms(delayLED);
0x01E6	0xF019C016  	MOVFF       _delayLED, FARG_VDelay_ms_Time_ms
0x01EA	0xF01AC017  	MOVFF       _delayLED+1, FARG_VDelay_ms_Time_ms+1
0x01EE	0xDF5C      	RCALL       _VDelay_ms
;Kitt.c,18 :: 		for(i=7; i>0; i--){
0x01F0	0x0618      	DECF        main_i_L0, 1 
;Kitt.c,21 :: 		}
0x01F2	0xD7EC      	BRA         L_main5
L_main6:
;Kitt.c,22 :: 		}
0x01F4	0xD7D3      	BRA         L_main0
;Kitt.c,23 :: 		}
L_end_main:
0x01F6	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [78]    _interrupt
0x0056      [82]    _Mul_32x32_U
0x00A8     [188]    _VDelay_ms
0x0164      [16]    ___CC2DW
0x0174     [132]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _delayLED
0x0018       [1]    main_i_L0
0x0019       [2]    FARG_VDelay_ms_Time_ms
0x001B       [4]    VDelay_ms_NumberOfCyc_L0
0x0F39       [1]    ANSELB
0x0F81       [1]    PORTB
0x0F8B       [1]    LATC
0x0F93       [1]    TRISB
0x0F94       [1]    TRISC
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
