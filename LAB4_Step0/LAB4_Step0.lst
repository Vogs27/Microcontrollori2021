;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/04/2021 18:15:49
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF2B  	GOTO        86
_interrupt:
;LAB4_Step0.c,25 :: 		void interrupt(){
0x0008	0xF015C000  	MOVFF       R0, 21
;LAB4_Step0.c,26 :: 		if(INTCON.TMR0IF){
0x000C	0xA4F2      	BTFSS       INTCON, 2 
0x000E	0xD018      	BRA         L_interrupt4
;LAB4_Step0.c,27 :: 		INTCON.TMR0IF=0;
0x0010	0x94F2      	BCF         INTCON, 2 
;LAB4_Step0.c,28 :: 		TMR0L = 248;
0x0012	0x0EF8      	MOVLW       248
0x0014	0x6ED6      	MOVWF       TMR0L 
;LAB4_Step0.c,29 :: 		counter_ms++;
0x0016	0x4A16      	INFSNZ      _counter_ms, 1 
0x0018	0x2A17      	INCF        _counter_ms+1, 1 
;LAB4_Step0.c,30 :: 		if(counter_ms>=1000){
0x001A	0x0E03      	MOVLW       3
0x001C	0x5C17      	SUBWF       _counter_ms+1, 0 
0x001E	0xE102      	BNZ         L__interrupt11
0x0020	0x0EE8      	MOVLW       232
0x0022	0x5C16      	SUBWF       _counter_ms, 0 
L__interrupt11:
0x0024	0xE30D      	BNC         L_interrupt5
;LAB4_Step0.c,31 :: 		counter_sec++;
0x0026	0x4A18      	INFSNZ      _counter_sec, 1 
0x0028	0x2A19      	INCF        _counter_sec+1, 1 
;LAB4_Step0.c,32 :: 		counter_ms=0;
0x002A	0x6A16      	CLRF        _counter_ms 
0x002C	0x6A17      	CLRF        _counter_ms+1 
;LAB4_Step0.c,33 :: 		if (dir == 1){
0x002E	0x0E00      	MOVLW       0
0x0030	0x181B      	XORWF       _dir+1, 0 
0x0032	0xE102      	BNZ         L__interrupt12
0x0034	0x0E01      	MOVLW       1
0x0036	0x181A      	XORWF       _dir, 0 
L__interrupt12:
0x0038	0xE102      	BNZ         L_interrupt6
;LAB4_Step0.c,34 :: 		cycle ++;
0x003A	0x2A21      	INCF        _cycle, 1 
;LAB4_Step0.c,35 :: 		}
0x003C	0xD001      	BRA         L_interrupt7
L_interrupt6:
;LAB4_Step0.c,37 :: 		cycle --;
0x003E	0x0621      	DECF        _cycle, 1 
;LAB4_Step0.c,38 :: 		}
L_interrupt7:
;LAB4_Step0.c,39 :: 		}
L_interrupt5:
;LAB4_Step0.c,40 :: 		}
L_interrupt4:
;LAB4_Step0.c,41 :: 		}
L_end_interrupt:
L__interrupt10:
0x0040	0xF000C015  	MOVFF       21, R0
0x0044	0x0011      	RETFIE      1
; end of _interrupt
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0046	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0048	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x004C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x004E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0050	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0052	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0054	0x0012      	RETURN      0
; end of ___CC2DW
_main:
0x0056	0x6A16      	CLRF        _counter_ms 
0x0058	0x6A17      	CLRF        23 
0x005A	0x6A18      	CLRF        _counter_sec 
0x005C	0x6A19      	CLRF        25 
0x005E	0x0E01      	MOVLW       1
0x0060	0x6E1A      	MOVWF       _dir 
0x0062	0x6A1B      	CLRF        27 
0x0064	0x0EFF      	MOVLW       255
0x0066	0x6E1C      	MOVWF       _pattern 
0x0068	0x0E7E      	MOVLW       126
0x006A	0x6E1D      	MOVWF       29 
0x006C	0x0E3C      	MOVLW       60
0x006E	0x6E1E      	MOVWF       30 
0x0070	0x0E18      	MOVLW       24
0x0072	0x6E1F      	MOVWF       31 
0x0074	0x6A20      	CLRF        32 
0x0076	0x6A21      	CLRF        _cycle 
;LAB4_Step0.c,6 :: 		void main() {
;LAB4_Step0.c,7 :: 		T0CON = 0b11000111;
0x0078	0x0EC7      	MOVLW       199
0x007A	0x6ED5      	MOVWF       T0CON 
;LAB4_Step0.c,8 :: 		TMR0L = 248;
0x007C	0x0EF8      	MOVLW       248
0x007E	0x6ED6      	MOVWF       TMR0L 
;LAB4_Step0.c,9 :: 		TRISD = 0b00000000;
0x0080	0x6A95      	CLRF        TRISD 
;LAB4_Step0.c,13 :: 		INTCON.TMR0IE = 1;
0x0082	0x8AF2      	BSF         INTCON, 5 
;LAB4_Step0.c,14 :: 		INTCON.GIE = 1;
0x0084	0x8EF2      	BSF         INTCON, 7 
;LAB4_Step0.c,16 :: 		while(1){
L_main0:
;LAB4_Step0.c,17 :: 		LATD = pattern[cycle];
0x0086	0x0E1C      	MOVLW       _pattern
0x0088	0x6EE9      	MOVWF       FSR0L 
0x008A	0x0E00      	MOVLW       hi_addr(_pattern)
0x008C	0x6EEA      	MOVWF       FSR0L+1 
0x008E	0x5021      	MOVF        _cycle, 0 
0x0090	0x26E9      	ADDWF       FSR0L, 1 
0x0092	0x0E00      	MOVLW       0
0x0094	0xBE21      	BTFSC       _cycle, 7 
0x0096	0x0EFF      	MOVLW       255
0x0098	0x22EA      	ADDWFC      FSR0L+1, 1 
0x009A	0xFF8CCFEE  	MOVFF       POSTINC0, LATD
;LAB4_Step0.c,18 :: 		if (cycle == 4)
0x009E	0x5021      	MOVF        _cycle, 0 
0x00A0	0x0A04      	XORLW       4
0x00A2	0xE104      	BNZ         L_main2
;LAB4_Step0.c,19 :: 		dir = -1;
0x00A4	0x0EFF      	MOVLW       255
0x00A6	0x6E1A      	MOVWF       _dir 
0x00A8	0x0EFF      	MOVLW       255
0x00AA	0x6E1B      	MOVWF       _dir+1 
L_main2:
;LAB4_Step0.c,20 :: 		if (cycle == 0)
0x00AC	0x5021      	MOVF        _cycle, 0 
0x00AE	0x0A00      	XORLW       0
0x00B0	0xE104      	BNZ         L_main3
;LAB4_Step0.c,21 :: 		dir = 1;
0x00B2	0x0E01      	MOVLW       1
0x00B4	0x6E1A      	MOVWF       _dir 
0x00B6	0x0E00      	MOVLW       0
0x00B8	0x6E1B      	MOVWF       _dir+1 
L_main3:
;LAB4_Step0.c,22 :: 		}
0x00BA	0xD7E5      	BRA         L_main0
;LAB4_Step0.c,23 :: 		}
L_end_main:
0x00BC	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [62]    _interrupt
0x0046      [16]    ___CC2DW
0x0056     [104]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016       [2]    _counter_ms
0x0018       [2]    _counter_sec
0x001A       [2]    _dir
0x001C       [5]    _pattern
0x0021       [1]    _cycle
0x0F8C       [1]    LATD
0x0F95       [1]    TRISD
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
